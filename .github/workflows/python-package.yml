# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', 3.8, 3.9, '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.7 from deadsnakes
      if: matrix.python-version == '3.7'
      run: |
        sudo add-apt-repository ppa:deadsnakes/ppa
        sudo apt-get update
        sudo apt-get install -y python3.7 python3.7-dev python3.7-distutils
        python3.7 -m venv py37_env --without-pip
        source py37_env/bin/activate
        curl -sS https://bootstrap.pypa.io/pip/3.7/get-pip.py | python
        echo "PATH=$PWD/py37_env/bin:$PATH" >> $GITHUB_ENV

    - name: Set up Python ${{ matrix.python-version }}
      if: matrix.python-version != '3.7'
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --ignore=F824 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --statistics

    - name: Download DSDL Specifications
      run: |
        git clone https://github.com/DroneCAN/DSDL.git
        ln -s $PWD/DSDL ../

    - name: Install pydronecan
      run: |
        python -m pip install .

    - name: Run Tests from local
      run: |
        python -m unittest discover test

    - name: Run Tests from installation
      run: |
        pytest
